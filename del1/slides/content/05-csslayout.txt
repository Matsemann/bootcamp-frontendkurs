

class: center middle

#Layout
## med CSS

???
Dimensjoner, flyt, posisjonering

---

#Box sizing

```css
.min-boks {
  width: 300px;
  height: 100px;
  padding: 0px;
  border: 0px solid #FD5158;
  margin: 0px;
}
```

<div style="width: 300px; height: 100px;
  padding: 0px;
  background: black;
  border: 0px solid #FD5158;">Lorem ipsum</div>

---

#Box sizing

```css
.min-boks {
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 0px solid #FD5158;
  margin: 0px;
}
```

<div style="width: 300px;  height: 100px;
  padding: 20px;
  background: black;
  border: 0px solid #FD5158;">Lorem ipsum</div>

---

#Box sizing

```css
.min-boks {
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 15px solid #FD5158;
  margin: 0px;
}
```

<div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158;">Lorem ipsum</div>
---

#Box sizing

```css
.min-boks {
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 15px solid #FD5158;
  margin: 0px;
}
```

<div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158; display: inline-block;">Lorem ipsum</div><div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158; display: inline-block;">Lorem ipsum</div>

---

#Box sizing

```css
.min-boks {
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 15px solid #FD5158;
  margin: 30px;
}
```

<div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158; display: inline-block; margin: 20px;">Lorem ipsum</div><div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158; display: inline-block; margin: 20px;">Lorem ipsum</div>

---
exclude:true
#Box sizing: border-box

```css
div {
  box-sizing: border-box;
  width: 300px;
  height: 100px;
  padding: 0px;
  border: 0px solid #FD5158;
}
```
<div style="box-sizing:border-box; width: 300px; height: 100px;
  padding: 0px;
  background: black;
  border: 0px solid #FD5158;">Lorem ipsum</div>

---

exclude:true
#Box sizing: border-box

```css
div {
  box-sizing: border-box;
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 0px solid #FD5158;
}
```
<div style="box-sizing:border-box; width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 0px solid #FD5158;">Lorem ipsum</div>

---
exclude:true
#Box sizing: border-box

```css
div {
  box-sizing: border-box;
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 15px solid #FD5158;
}
```
<div style="box-sizing:border-box; width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158;">Lorem ipsum</div>

--
exclude:true

<div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158;">Lorem ipsum</div>

---

#Box model

```css
.min-boks {
  width: 300px;
  height: 100px;
  padding: 20px;
  border: 15px solid #FD5158;
  margin: 30px;
}
```

<div style="width: 300px; height: 100px;
  padding: 20px;
  background: black;
  border: 15px solid #FD5158; display: inline-block; margin: 20px;">Lorem ipsum</div>


<img src="resources/boxmodel.png" style="width: 50%; position: absolute; right: 50px; top: 120px;">


???


Pakke-metafor.

---


#Flyt

```html
<div>
  <h1>Overskrift</h1> <!-- block -->
  <p>Litt tekst</p> <!-- block -->
  <button>En knapp</button> <!-- inline-block -->
  <button>Enda en knapp</button>
  <a href="#">Lenke</a> <!-- inline -->
  <div>mer tekst</div> <!-- blokk -->
</div>
```

```css
h1 { display: block; }
```

<div style="background-color: #1a1a1a; font-size: 25px;">
  <h1 style="margin-bottom: 5px;">Overskrift</h1>
  <p>Litt tekst</p>
  <button style="padding: 15px; font-size: 25px;">En knapp</button>
  <button style="padding: 15px; font-size: 25px;">Enda en knapp</button>
  <a href="#">Lenke</a>
  <div>mer tekst</div>
</div>


???

Her vises litt html-kode, og hvordan det blir seendes ut.
Som man kan se, vises det man har i html-en etterhverandre i den rekkefølge det er i i html-en.

Det man også kan se, er at det noen ganger havner under hverandre, og andre ganger ved siden av hverandre. Mange elementer kalles for blokk-elementer, og når nettleseren viser de vil de alltid havne på en egen linje. Når nettleseren derimot skal vise inline-elementer ser den om det er plass på samme linje, og om det er det puttes det der.

Blir jo ikke veldig spenstige design når alt bare kommer slik etter hverandre, så det skal vi gjøre noe med.

---

# Midtstilling

```html
<div class="midtstilt">Midtstilt?</div>
```
```css
.midtstilt { text-align: center; }
```
<div style="background: black; text-align: center;">Overskrift</div>


--

&nbsp;

```html
<span class="midstilt">Midtstilt?</span>
```
```css
.midtstilt { text-align: center; }
```
<div>
<span style="background: black; text-align: center;">Overskrift</span>
</div>

---

# Midtstilling

```html
<div class="midtstilt-blokk">Midstilt blokk</div>
```
```css
.midtstilt-blokk {
  width: 400px;
  margin-left: auto;
  margin-right: auto;
}
```
<div style="background: black; width: 400px; margin: 0 auto;">Midtstilt blokk</div>


---

class: split

# Posisjonering

.i-gokk-position[```css
div.a {
    position: static;
}
div.b {
    position: static;
}
div.c {
    position: static;
}
```]

<div class="position">

    <div class="a">A</div>
    <div class="b">B</div>
    <div class="c">C</div>
</div>
---

class: split

# Posisjonering

.i-gokk-position[```css
div.a {
    position: static;
}
div.b {
    position: relative;
}
div.c {
    position: static;
}
```]

<div class="position">

    <div class="a">A</div>
    <div class="b" style="position: relative">B</div>
    <div class="c">C</div>
</div>

---

class: split

# Posisjonering

.i-gokk-position[```css
div.a {
    position: static;
}
div.b {
    position: relative;
    top: 10px;
    left: 15px;
}
div.c {
    position: static;
}
```]

<div class="position">

    <div class="a">A</div>
    <div class="b" style="position: relative; left: 15px; top: 10px">B</div>
    <div class="c">C</div>
</div>
---

class: split

# Posisjonering



<div class="position">
    <div class="a">A</div>
    <div class="b" style="position: absolute; left: 15px; top: 10px">B</div>
    <div class="c">C</div>
</div>

.i-gokk-position[```css
div.a {
    position: static;
}
div.b {
    position: absolute;
    top: 10px;
    left: 15px;
}
div.c {
    position: static;
}
```]---

class: split

# Posisjonering



<div class="position" style="position: relative">
    <div class="a">A</div>
    <div class="b" style="position: absolute; left: 15px; top: 10px">B</div>
    <div class="c">C</div>
</div>

.i-gokk-position[```css
div.a {
    position: static;
}
div.b {
    position: absolute;
    top: 10px;
    left: 15px;
}
div.c {
    position: static;
}
.container {
    position: relative;
}
```]

---

#Oppgaver

 * Midtstilling: https://jsfiddle.net/Matsemann/wg8oLh8a/
 * Posisjonering: https://jsfiddle.net/Matsemann/b75wz3mj/1/


???
Løsninger

 * https://jsfiddle.net/Matsemann/qb34mrut/1/
 * https://jsfiddle.net/Matsemann/t7jt0tyd/1/

---
class: split

# Grunnleggende Flexbox

```html
<div class="container">
  <div>A</div>
  <div>B</div>
  <div>C</div>
  <div>D</div>
  <div>E</div>
</div>
```

```css
.container {
}
```

<div class="i-gokk">
  <div class="container">
    <div>A</div>
    <div>B</div>
    <div>C</div>
    <div>D</div>
    <div>E</div>
  </div>
</div>

.source[https://css-tricks.com/snippets/css/a-guide-to-flexbox/]

---
class: split

# Grunnleggende Flexbox

```html
<div class="container">
  <div>A</div>
  <div>B</div>
  <div>C</div>
  <div>D</div>
  <div>E</div>
</div>
```

```css
.container {
  display: flex;
}
```

<div class="i-gokk">
  <div class="container" style="display: flex;">
    <div style="display: inline-block; padding-left: 40px; padding-right: 40px;">A</div>
    <div style="display: inline-block; padding-left: 40px; padding-right: 40px;">B</div>
    <div style="display: inline-block; padding-left: 40px; padding-right: 40px;">C</div>
    <div style="display: inline-block; padding-left: 40px; padding-right: 40px;">D</div>
    <div style="display: inline-block; padding-left: 40px; padding-right: 40px;">E</div>
  </div>
</div>

.source[https://css-tricks.com/snippets/css/a-guide-to-flexbox/]

---
class: split

# Grunnleggende Flexbox

```html
<div class="container">
  <div>A</div>
  <div>B</div>
  <div>C</div>
  <div>D</div>
  <div>E</div>
</div>
```

```css
.container {
  display: flex;
  flex-wrap: wrap;
}
```

<div class="i-gokk">
  <div class="container" style="
  display: flex;
  flex-wrap: wrap;">
    <div>A</div>
    <div>B</div>
    <div>C</div>
    <div>D</div>
    <div>E</div>
  </div>
</div>

.source[https://css-tricks.com/snippets/css/a-guide-to-flexbox/]

---
class: split

# Grunnleggende Flexbox

```html
<div class="container">
  <div>A</div>
  <div>B</div>
  <div>C</div>
  <div>D</div>
  <div>E</div>
</div>
```

```css
.container {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
}
```

<div class="i-gokk">
  <div class="container" style="
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;">
    <div>A</div>
    <div>B</div>
    <div>C</div>
    <div>D</div>
    <div>E</div>
  </div>
</div>

.source[https://css-tricks.com/snippets/css/a-guide-to-flexbox/]

---

class: split

# Grunnleggende Flexbox

```html
<div class="container">
  <div>A</div>
  <div>B</div>
  <div>C</div>
  <div>D</div>
  <div>E</div>
</div>
```

```css
.container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}
```

<div class="i-gokk">
  <div class="container" style="
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;">
    <div>A</div>
    <div>B</div>
    <div>C</div>
    <div>D</div>
    <div>E</div>
  </div>
</div>

.source[https://css-tricks.com/snippets/css/a-guide-to-flexbox/]

---

class: split

# Grunnleggende Flexbox

```html
<div class="container">
  <div>A</div>
  <div>B</div>
  <div>C</div>
  <div>D</div>
  <div>E</div>
</div>
```

```css
.container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  flex-direction: row-reverse;
}
```

<div class="i-gokk">
  <div class="container" style="
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  flex-direction: row-reverse;">
    <div>A</div>
    <div>B</div>
    <div>C</div>
    <div>D</div>
    <div>E</div>
  </div>
</div>

.source[https://css-tricks.com/snippets/css/a-guide-to-flexbox/]

---

class: split

# Oppgave

* Ta utgangspunkt i `nedteller.html` og `nedteller.css` i `/assignment`-mappa.
* Gi `<main>`-elementet en bredde og midtstill det.
* Midtstill teksten til telleren
* Bruk flexbox på div-en med alle knappene (`.buttons`) for å få knappene til å ligge som vist til høyre
* Midtstill og style start-knappen


Farger:

* Gråfarge: `#262626`
* Rødfarge: `#fd5158`


<iframe src="../solutions/4/nedteller.html" style="width: 50%" />


???

trenger ikke få til samme størrelser og farger, men prøv å få til selve layouten
husk å nevne man kan fortsette på lf, i dette tilfelle solutions/4

---